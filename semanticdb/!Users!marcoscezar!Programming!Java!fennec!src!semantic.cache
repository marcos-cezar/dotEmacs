;; Object src/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "src/"
  :tables (list 
   (semanticdb-table "Makefile.in"
    :major-mode 'makefile-bsdmake-mode
    :tags 
        '( ("make_min_ver" variable (:default-value ("3.81")) nil [278 299])
            ("export" function (:arguments ("=" "1")) nil [445 472])
            ("TOPLEVEL_BUILD" function (:arguments ("=" "1")) nil [445 472])
            ("default" function nil nil [473 483])
            ("$(topsrcdir)/$(MOZ_BUILD_APP)/build.mk" include nil nil [504 551])
            ("$(topsrcdir)/config/config.mk" include nil nil [558 596])
            ("GARBAGE_DIRS" variable (:default-value ("dist" "_javagen" "_profile" "staticlib")) nil [597 646])
            ("DIST_GARBAGE" variable (:default-value ("config.cache" "config.log" "config.status*" "config-defs.h" "config/autoconf.mk" "mozilla-config.h" "netwerk/necko-config.h" "xpcom/xpcom-config.h" "xpcom/xpcom-private.h" ".mozconfig.mk")) nil [646 850])
            ("configure_dir" variable (:default-value ("$(topsrcdir)/js/src")) nil [871 907])
            ("configure_dir" variable (:default-value ("$(topsrcdir)")) nil [912 941])
            ("libs" function (:arguments ("CLOBBER" "$(configure_dir)/configure" "config.status" "backend.RecursiveMakeBackend")) nil [1092 1199])
            ("binaries" function (:arguments ("CLOBBER" "$(configure_dir)/configure" "config.status" "backend.RecursiveMakeBackend")) nil [1092 1199])
            ("libs" function (:arguments ("$(topsrcdir)/js/src/configure" "js/src/config.status")) nil [1220 1300])
            ("binaries" function (:arguments ("$(topsrcdir)/js/src/configure" "js/src/config.status")) nil [1220 1300])
            (".PHONY" function (:arguments ("CLOBBER")) nil [1333 1349])
            ("CLOBBER" function nil nil [1349 1358])
            ("CLOBBER" function (:arguments ("$(topsrcdir)/CLOBBER")) nil [1363 1558])
            ("$(topsrcdir)" function (:arguments ("$(topsrcdir)/configure.in")) nil [1565 1615])
            ("$(topsrcdir)" function (:arguments ("$(topsrcdir)/js/src/configure.in")) nil [1615 1679])
            ("$(topsrcdir)" function nil nil [1679 1967])
            ("$(topsrcdir)" function nil nil [1679 1967])
            ("config.status" function (:arguments ("$(configure_dir)/configure")) nil [1968 2010])
            ("js/src/config.status" function (:arguments ("$(topsrcdir)/js/src/configure")) nil [2010 2062])
            ("config.status" function nil nil [2062 2289])
            ("js/src/config.status" function nil nil [2062 2289])
            ("backend.RecursiveMakeBackend" function nil nil [2649 2764])
            ("Makefile" function (:arguments ("backend.RecursiveMakeBackend")) nil [2765 2818])
            ("backend.RecursiveMakeBackend.pp" include nil nil [2819 2859])
            ("default" function (:arguments ("backend.RecursiveMakeBackend")) nil [2860 2899])
            ("install_manifest_depends" variable (:default-value ("CLOBBER" "$(configure_dir)/configure" "config.status" "backend.RecursiveMakeBackend" "$(NULL)")) nil [2956 3089])
            ("install_manifest_depends" variable (:default-value ("$(topsrcdir)/js/src/configure" "js/src/config.status" "$(NULL)")) nil [3111 3210])
            (".PHONY" function (:arguments ("install-manifests")) nil [3217 3243])
            ("install-manifests" function (:arguments ("$(addprefix install-dist-,$(install_manifests))")) nil [3243 3310])
            ("NO_REMOVE" variable (:default-value ("1")) nil [3640 3652])
            (".PHONY" function (:arguments ("$(addprefix install-dist-,$(install_manifests))")) nil [3659 3715])
            ("$(addprefix install-dist-,$(install_manifests))" function (:arguments ("install-dist-%:" "$(install_manifest_depends)")) nil [3715 3927])
            (".PHONY" function (:arguments ("install-tests")) nil [3928 3950])
            ("install-manifests" function (:arguments ("install-tests")) nil [3950 3983])
            ("install-tests" function (:arguments ("$(install_manifest_depends)")) nil [3983 4139])
            ("GARBAGE_DIRS" variable (:default-value ("_tests")) nil [4351 4374])
            ("export" function (:arguments ("install-manifests")) nil [4679 4706])
            ("binaries" function nil nil [4706 4757])
            ("export" function (:arguments ("install-manifests")) nil [4808 4835])
            ("binaries" function nil nil [4835 4886])
            ("export" function (:arguments ("install-dist-sdk")) nil [5045 5071])
            ("$(topsrcdir)/testing/testsuite-targets.mk" include nil nil [5172 5222])
            ("default" function nil nil [5235 5361])
            ("all" function nil nil [5235 5361])
            ("$(topsrcdir)/config/rules.mk" include nil nil [5362 5399])
            ("distclean" function nil nil [5400 5435])
            ("MAKE_SYM_STORE_ARGS" variable (:default-value ("-c" "--vcs-info")) nil [5499 5536])
            ("MAKE_SYM_STORE_ARGS" variable (:default-value ("-i")) nil [5554 5580])
            ("MAKE_SYM_STORE_PATH" variable (:default-value (".")) nil [5751 5776])
            ("MAKE_SYM_STORE_ARGS" variable (:default-value ("-c" "-a" "'i386 x86_64'" "--vcs-info")) nil [5877 5931])
            ("MAKE_SYM_STORE_PATH" variable (:default-value ("$(DIST)/universal")) nil [5931 5972])
            ("MAKE_SYM_STORE_ARGS" variable (:default-value ("-c" "-a" "$(OS_TEST)" "--vcs-info")) nil [5977 6028])
            ("MAKE_SYM_STORE_PATH" variable (:default-value ("$(DIST)/bin")) nil [6028 6063])
            ("MAKE_SYM_STORE_ARGS" variable (:default-value ("-c" "--vcs-info")) nil [6164 6201])
            ("MAKE_SYM_STORE_PATH" variable (:default-value ("$(DIST)/bin")) nil [6245 6280])
            ("SYM_STORE_SOURCE_DIRS" variable (:default-value ("$(topsrcdir)")) nil [6287 6325])
            ("$(topsrcdir)/toolkit/mozapps/installer/package-name.mk" include nil nil [6347 6410])
            ("EXTRA_BUILDID" variable (:default-value ("-$(MOZ_SYMBOLS_EXTRA_BUILDID)")) nil [6443 6490])
            ("SYMBOL_INDEX_NAME" variable (:default-value ("$(MOZ_APP_NAME)-$(MOZ_APP_VERSION)-$(OS_TARGET)-$(BUILDID)-$(CPU_ARCH)$(EXTRA_BUILDID)-symbols.txt")) nil [6497 6620])
            ("buildsymbols" function nil nil [6621 6635])
            ("uploadsymbols" function nil nil [7846 7861])
            ("MOZ_SOURCE_STAMP" variable (:default-value ("$(MOZ_SOURCE_STAMP)")) nil [8239 8279])
            ("maybe_clobber_profiledbuild" function (:arguments ("clean")) nil [8559 8594])
            ("maybe_clobber_profiledbuild" function nil nil [8599 8628])
            ("maybe_clobber_profiledbuild" function nil nil [8639 8764])
            (".PHONY" function (:arguments ("maybe_clobber_profiledbuild")) nil [8771 8807])
            ("check" function nil nil [8960 9263])
            ("check-%" function nil nil [9325 9356])
            ("source-package" function nil nil [9357 9403])
            ("install" function nil nil [9357 9403])
            (".PHONY" function (:arguments ("config/export")) nil [9530 9552])
            ("config/export" function nil nil [9552 9567])
            ("js/xpconnect/src/export" function (:arguments ("dom/bindings/export" "xpcom/xpidl/export")) nil [9643 9707])
            ("accessible/src/xpcom/export" function (:arguments ("xpcom/xpidl/export")) nil [9707 9755])
            ("js/src/export" function (:arguments ("mfbt/export")) nil [9755 9782])
            ("js/src/export" function (:arguments ("build/clang-plugin/export")) nil [9808 9863])
            ("config/export" function (:arguments ("build/clang-plugin/export")) nil [9808 9863]))          
    :file "Makefile.in"
    :pointmax 9875
    :fsize 9874
    :lastmodtime '(21249 54303 0 0)
    :unmatched-syntax '((symbol 8286 . 8302) (symbol 8279 . 8285) (bol 8279 . 8279) (shell-command 7886 . 8031) (bol 7885 . 7885) (ENDIF 7819 . 7824) (bol 7819 . 7819) (shell-command 7666 . 7818) (bol 7665 . 7665) (shell-command 7510 . 7664) (bol 7509 . 7509) (shell-command 7374 . 7508) (bol 7373 . 7373) (shell-command 7337 . 7372) (bol 7336 . 7336) (shell-command 7315 . 7335) (bol 7314 . 7314) (shell-command 6823 . 7313) (bol 6822 . 6822) (shell-command 6776 . 6821) (bol 6775 . 6775) (shell-command 6728 . 6774) (bol 6727 . 6727) (shell-command 6688 . 6726) (bol 6687 . 6687) (shell-command 6660 . 6686) (bol 6659 . 6659) (symbol 6225 . 6244) (semantic-list 6219 . 6225) (punctuation 6218 . 6219) (punctuation 6216 . 6217) (punctuation 6215 . 6216) (symbol 6201 . 6214) (bol 6201 . 6201) (symbol 6093 . 6112) (semantic-list 6087 . 6093) (punctuation 6086 . 6087) (punctuation 6084 . 6085) (punctuation 6083 . 6084) (symbol 6069 . 6082) (bol 6069 . 6069) (symbol 5673 . 5677) (semantic-list 5663 . 5673) (punctuation 5662 . 5663) (symbol 5615 . 5662) (semantic-list 5604 . 5615) (punctuation 5603 . 5604) (punctuation 5601 . 5602) (punctuation 5600 . 5601) (symbol 5586 . 5599) (bol 5586 . 5586) (ELSE 4769 . 4773) (bol 4769 . 4769) (symbol 2952 . 2955) (symbol 2944 . 2951) (symbol 2937 . 2943) (INCLUDE 2929 . 2936) (symbol 2925 . 2928) (symbol 2921 . 2924) (punctuation 2919 . 2920) (punctuation 2918 . 2919) (symbol 2900 . 2917) (bol 2900 . 2900) (semantic-list 377 . 431) (punctuation 376 . 377) (bol 376 . 376) (semantic-list 243 . 271) (punctuation 242 . 243) (bol 242 . 242))
    )
   (semanticdb-table "mach"
    :major-mode 'python-mode
    :tags nil
    :file "mach"
    :pointmax 2056
    :fsize 2055
    :lastmodtime '(21221 31870 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "moz.build"
    :major-mode 'python-mode
    :tags 
        '( ("CONFIGURE_SUBST_FILES" variable nil nil [309 390])
            ("if" code nil nil [392 488])
            ("add_tier_dir" code nil nil [489 531])
            ("if" code nil nil [532 719])
            ("if" code nil nil [720 1278])
            ("if" code nil nil [1279 1661])
            ("if" code nil nil [1662 1991])
            ("if" code nil nil [1992 2150]))          
    :file "moz.build"
    :pointmax 2150
    :fsize 2149
    :lastmodtime '(21249 54307 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!marcoscezar!Programming!Java!fennec!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
